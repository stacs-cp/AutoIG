#!/bin/bash

# a bash script that will be called by irace every time a configuration is evaluated
# this script will save output of a run in a text file called out-<configuration_id>-<random_seed>, so if irace is terminated early and is resumed, this csript will look for that output file first. If the file exists and result is valid, it won't re-run the evaluation and just simply returns the current output.

candId=$1
instId=$2
seed=$3
problem=$4

# options
reRunExistingButFailedOutput='1'

outfn="detailed-output/out-${candId}-${seed}"

function checkScore
{
    score="$(echo $1|cut -d' ' -f 1)"
    re='^-?[0-9]+([.][0-9]+)?e?[+-]?([0-9]+)?$'
    if ! [[ ${score} =~ $re ]] && [[ ${score} != "Inf" ]]; then
        return 1
    fi
    return 0
}

# if output file already exists but its last line isn't a valid tuning results, re-run it
reRun='0'
if [ -f $outfn ]; then
    rs="$(tail -n 1 ${outfn})"   
    checkScore "$rs"
    reRun="$?"
fi

# run command
if [ ! -f $outfn ] || [ "${reRun}" = "1" ] ; then
    scriptDir="$( cd "$( dirname "${BASH_SOURCE[0]}"; )" >/dev/null 2>&1 && pwd )"
    cmd="python3 -u $scriptDir/wrapper.py $@  > ${outfn} 2>&1"
    #echo $cmd
    eval $cmd
fi

# if output is neither a number nor Inf , print "Error"
rs="$(tail -n 1 ${outfn})"
checkScore "$rs"
failed="$?"
if [[ "${failed}" == "1" ]]; then
   #echo "Inf"
   echo "Error! ${rs}"
else
   echo "$rs"
fi
