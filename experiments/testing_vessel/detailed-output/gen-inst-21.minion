MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..45}
DISCRETE width_Function1D_00002 #
{1..45}
DISCRETE width_Function1D_00003 #
{1..45}
DISCRETE width_Function1D_00004 #
{1..45}
DISCRETE width_Function1D_00005 #
{1..45}
DISCRETE width_Function1D_00006 #
{1..45}
DISCRETE width_Function1D_00007 #
{1..45}
DISCRETE width_Function1D_00008 #
{1..45}
DISCRETE width_Function1D_00009 #
{1..45}
DISCRETE length_Function1D_00001 #
{1..23}
DISCRETE length_Function1D_00002 #
{1..23}
DISCRETE length_Function1D_00003 #
{1..23}
DISCRETE length_Function1D_00004 #
{1..23}
DISCRETE length_Function1D_00005 #
{1..23}
DISCRETE length_Function1D_00006 #
{1..23}
DISCRETE length_Function1D_00007 #
{1..23}
DISCRETE length_Function1D_00008 #
{1..23}
DISCRETE length_Function1D_00009 #
{1..23}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005) + (length_Function1D_00006 * width_Function1D_00006) + (length_Function1D_00007 * width_Function1D_00007) + (length_Function1D_00008 * width_Function1D_00008) + (length_Function1D_00009 * width_Function1D_00009))
{103..341}
DISCRETE aux1 #(length_Function1D_00001 * width_Function1D_00001)
{1..333}
DISCRETE aux2 #(length_Function1D_00002 * width_Function1D_00002)
{1..333}
DISCRETE aux3 #(length_Function1D_00003 * width_Function1D_00003)
{1..333}
DISCRETE aux4 #(length_Function1D_00004 * width_Function1D_00004)
{1..333}
DISCRETE aux5 #(length_Function1D_00005 * width_Function1D_00005)
{1..333}
DISCRETE aux6 #(length_Function1D_00006 * width_Function1D_00006)
{1..333}
DISCRETE aux7 #(length_Function1D_00007 * width_Function1D_00007)
{1..333}
DISCRETE aux8 #(length_Function1D_00008 * width_Function1D_00008)
{1..333}
DISCRETE aux9 #(length_Function1D_00009 * width_Function1D_00009)
{1..333}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[width_Function1D_00006],[width_Function1D_00007],[width_Function1D_00008],[width_Function1D_00009],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005],[length_Function1D_00006],[length_Function1D_00007],[length_Function1D_00008],[length_Function1D_00009]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, width_Function1D_00006, width_Function1D_00007, width_Function1D_00008, width_Function1D_00009, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005, length_Function1D_00006, length_Function1D_00007, length_Function1D_00008, length_Function1D_00009]
**TUPLELIST**
negativeSol 9 18
10 1 10 13 1 1 1 1 1 23 23 7 1 1 1 1 1 1
6 20 1 1 1 1 1 1 1 19 11 1 1 1 1 1 1 1
3 2 1 3 19 2 1 1 1 6 8 5 2 15 4 1 1 1
23 9 4 1 1 1 1 1 1 14 1 1 1 1 1 1 1 1
3 2 1 1 2 1 12 1 1 8 5 1 8 15 14 21 1 1
7 8 2 18 1 1 1 1 1 1 14 9 11 1 1 1 2 1
4 12 6 1 12 2 1 1 1 22 17 2 20 1 1 1 1 1
13 7 14 1 2 1 1 1 1 16 16 1 1 1 1 1 1 1
6 10 10 15 8 1 1 4 2 5 10 2 1 21 1 1 1 1
**CONSTRAINTS**
w-inintervalset(aux1, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux2, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux3, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux4, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux5, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux6, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux7, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux8, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
w-inintervalset(aux9, [1,46,48,52,54,58,60,60,62,66,68,70,72,72,74,78,80,82,84,88,90,93,95,96,98,100,102,102,104,105,108,108,110,112,114,117,119,121,123,126,128,130,132,133,135,136,138,138,140,140,143,145,147,148,150,150,152,156,160,162,164,165,168,172,174,176,180,180,182,182,184,187,189,190,192,192,195,196,198,198,200,200,203,205,207,210,215,217,220,222,224,225,228,228,230,232,234,234,238,238,240,240,242,243,245,248,250,250,252,253,255,256,258,261,264,264,266,266,270,270,272,273,275,276,279,280,285,290,294,294,296,297,299,301,304,304,306,306,308,308,310,310,312,312,315,315,319,320,322,325,328,328,330,330,333,333])
product(length_Function1D_00001, width_Function1D_00001, aux1)
product(length_Function1D_00002, width_Function1D_00002, aux2)
product(length_Function1D_00003, width_Function1D_00003, aux3)
product(length_Function1D_00004, width_Function1D_00004, aux4)
product(length_Function1D_00005, width_Function1D_00005, aux5)
product(length_Function1D_00006, width_Function1D_00006, aux6)
product(length_Function1D_00007, width_Function1D_00007, aux7)
product(length_Function1D_00008, width_Function1D_00008, aux8)
product(length_Function1D_00009, width_Function1D_00009, aux9)
sumleq([aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9],aux0)
sumgeq([aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,width_Function1D_00006,width_Function1D_00007,width_Function1D_00008,width_Function1D_00009,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005,length_Function1D_00006,length_Function1D_00007,length_Function1D_00008,length_Function1D_00009
],negativeSol)
**EOF**